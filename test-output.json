{"numFailedTestSuites":3,"numFailedTests":12,"numPassedTestSuites":10,"numPassedTests":99,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":13,"numTotalTests":111,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1746988046963,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["summarize step"],"duration":26,"failureDetails":[],"failureMessages":[],"fullName":"summarize step should generate a summary with default options","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should generate a summary with default options"},{"ancestorTitles":["summarize step"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"summarize step should generate structured summary when format is structured","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should generate structured summary when format is structured"},{"ancestorTitles":["summarize step"],"duration":9,"failureDetails":[],"failureMessages":[],"fullName":"summarize step should respect maxLength parameter","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should respect maxLength parameter"},{"ancestorTitles":["summarize step"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"summarize step should include summary in results when includeInResults is true","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should include summary in results when includeInResults is true"},{"ancestorTitles":["summarize step"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"summarize step should not include summary in results when includeInResults is false","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should not include summary in results when includeInResults is false"},{"ancestorTitles":["summarize step"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"summarize step should use fact checks when factsOnly is true","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should use fact checks when factsOnly is true"},{"ancestorTitles":["summarize step"],"duration":32,"failureDetails":[],"failureMessages":[],"fullName":"summarize step should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["summarize step"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"summarize step should handle empty content gracefully when allowEmptyContent is true","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle empty content gracefully when allowEmptyContent is true"},{"ancestorTitles":["summarize step"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"summarize step should throw error for empty content when allowEmptyContent is false","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw error for empty content when allowEmptyContent is false"},{"ancestorTitles":["summarize step"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"summarize step should use custom summary when provided","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should use custom summary when provided"}],"endTime":1746988049854,"message":"","name":"/Users/jacquesmarais/Documents/Personal/deep-research-api/packages/core/tests/steps/summarize.test.ts","startTime":1746988047360,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["factCheck step"],"duration":35,"failureDetails":[],"failureMessages":[],"fullName":"factCheck step should perform fact checking with default options","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should perform fact checking with default options"},{"ancestorTitles":["factCheck step"],"duration":12,"failureDetails":[],"failureMessages":[],"fullName":"factCheck step should use custom threshold when specified","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should use custom threshold when specified"},{"ancestorTitles":["factCheck step"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"factCheck step should include fact checks in results when includeInResults is true","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should include fact checks in results when includeInResults is true"},{"ancestorTitles":["factCheck step"],"duration":14,"failureDetails":[],"failureMessages":[],"fullName":"factCheck step should respect custom prompt when provided","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respect custom prompt when provided"},{"ancestorTitles":["factCheck step"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"factCheck step should handle errors gracefully when continueOnError is true","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle errors gracefully when continueOnError is true"},{"ancestorTitles":["factCheck step"],"duration":36,"failureDetails":[],"failureMessages":[],"fullName":"factCheck step should throw error when no content and no statements provided","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw error when no content and no statements provided"},{"ancestorTitles":["factCheck step"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"factCheck step should handle empty content gracefully when allowEmptyContent is true","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle empty content gracefully when allowEmptyContent is true"},{"ancestorTitles":["factCheck step"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"factCheck step should skip low-confidence results based on threshold","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should skip low-confidence results based on threshold"},{"ancestorTitles":["factCheck step"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"factCheck step should handle error cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle error cases"}],"endTime":1746988049857,"message":"","name":"/Users/jacquesmarais/Documents/Personal/deep-research-api/packages/core/tests/steps/factCheck.test.ts","startTime":1746988047370,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Error handling system","BaseResearchError"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Error handling system BaseResearchError should create a basic error with required properties","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"status":"passed","title":"should create a basic error with required properties"},{"ancestorTitles":["Error handling system","BaseResearchError"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Error handling system BaseResearchError should include optional properties when provided","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"should include optional properties when provided"},{"ancestorTitles":["Error handling system","BaseResearchError"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Error handling system BaseResearchError should format error message correctly","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should format error message correctly"},{"ancestorTitles":["Error handling system","Specialized error classes"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Error handling system Specialized error classes should create ConfigurationError with correct code","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should create ConfigurationError with correct code"},{"ancestorTitles":["Error handling system","Specialized error classes"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Error handling system Specialized error classes should create ValidationError with correct code","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should create ValidationError with correct code"},{"ancestorTitles":["Error handling system","Specialized error classes"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Error handling system Specialized error classes should create NetworkError with retry=true by default","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should create NetworkError with retry=true by default"},{"ancestorTitles":["Error handling system","Specialized error classes"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Error handling system Specialized error classes should create ApiError with statusCode in details","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should create ApiError with statusCode in details"},{"ancestorTitles":["Error handling system","Specialized error classes"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Error handling system Specialized error classes should create LLMError with retry=true by default","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should create LLMError with retry=true by default"},{"ancestorTitles":["Error handling system","Specialized error classes"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Error handling system Specialized error classes should create SearchError with retry=true by default","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should create SearchError with retry=true by default"},{"ancestorTitles":["Error handling system","Specialized error classes"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Error handling system Specialized error classes should create ExtractionError with correct code","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should create ExtractionError with correct code"},{"ancestorTitles":["Error handling system","Specialized error classes"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Error handling system Specialized error classes should create PipelineError with correct code","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should create PipelineError with correct code"},{"ancestorTitles":["Error handling system","Specialized error classes"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Error handling system Specialized error classes should create ProcessingError with correct code","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should create ProcessingError with correct code"},{"ancestorTitles":["Error handling system","Specialized error classes"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Error handling system Specialized error classes should create TimeoutError with correct code","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should create TimeoutError with correct code"},{"ancestorTitles":["Error handling system","Specialized error classes"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Error handling system Specialized error classes should create MaxIterationsError with correct code","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should create MaxIterationsError with correct code"},{"ancestorTitles":["Error handling system","Type guards"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Error handling system Type guards should correctly identify ResearchError","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should correctly identify ResearchError"},{"ancestorTitles":["Error handling system","Type guards"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Error handling system Type guards should correctly identify NetworkError","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should correctly identify NetworkError"},{"ancestorTitles":["Error handling system","Type guards"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Error handling system Type guards should correctly identify ApiError","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should correctly identify ApiError"},{"ancestorTitles":["Error handling system","Type guards"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Error handling system Type guards should correctly identify LLMError","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should correctly identify LLMError"},{"ancestorTitles":["Error handling system","Type guards"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Error handling system Type guards should correctly identify SearchError","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should correctly identify SearchError"},{"ancestorTitles":["Error handling system","Error code descriptions"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Error handling system Error code descriptions should have descriptions for all error codes","invocations":1,"location":null,"numPassingAsserts":69,"retryReasons":[],"status":"passed","title":"should have descriptions for all error codes"}],"endTime":1746988049952,"message":"","name":"/Users/jacquesmarais/Documents/Personal/deep-research-api/packages/core/tests/types/errors.test.ts","startTime":1746988049904,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Retry utilities","executeWithRetry"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Retry utilities executeWithRetry should execute function successfully without retries","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should execute function successfully without retries"},{"ancestorTitles":["Retry utilities","executeWithRetry"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"Retry utilities executeWithRetry should retry when function throws a retryable error","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should retry when function throws a retryable error"},{"ancestorTitles":["Retry utilities","executeWithRetry"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"Retry utilities executeWithRetry should respect maxRetries setting","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should respect maxRetries setting"},{"ancestorTitles":["Retry utilities","executeWithRetry"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Retry utilities executeWithRetry should not retry non-retryable errors","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should not retry non-retryable errors"},{"ancestorTitles":["Retry utilities","executeWithRetry"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Retry utilities executeWithRetry should use custom retryable function when provided","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should use custom retryable function when provided"},{"ancestorTitles":["Retry utilities","executeWithRetry"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Retry utilities executeWithRetry should call onRetry when provided","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should call onRetry when provided"},{"ancestorTitles":["Retry utilities","executeWithRetry"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Retry utilities executeWithRetry should use backoff factor for increasing delays","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should use backoff factor for increasing delays"},{"ancestorTitles":["Retry utilities","withRetry decorator"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Retry utilities withRetry decorator should add retry behavior to a function","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should add retry behavior to a function"},{"ancestorTitles":["Retry utilities","withRetry decorator"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Retry utilities withRetry decorator should preserve function arguments when retrying","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should preserve function arguments when retrying"}],"endTime":1746988049953,"message":"","name":"/Users/jacquesmarais/Documents/Personal/deep-research-api/packages/core/tests/utils/retry.test.ts","startTime":1746988049921,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["analyze step"],"duration":24,"failureDetails":[],"failureMessages":[],"fullName":"analyze step should perform analysis with default options","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should perform analysis with default options"},{"ancestorTitles":["analyze step"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"analyze step should respect focus parameter","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should respect focus parameter"},{"ancestorTitles":["analyze step"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"analyze step should include recommendations when includeRecommendations is true","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should include recommendations when includeRecommendations is true"},{"ancestorTitles":["analyze step"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"analyze step should respect depth parameter","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should respect depth parameter"},{"ancestorTitles":["analyze step"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"analyze step should include analysis in results when includeInResults is true","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should include analysis in results when includeInResults is true"},{"ancestorTitles":["analyze step"],"duration":52,"failureDetails":[],"failureMessages":[],"fullName":"analyze step should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["analyze step"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"analyze step should handle empty content gracefully when allowEmptyContent is true","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle empty content gracefully when allowEmptyContent is true"},{"ancestorTitles":["analyze step"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"analyze step should throw error for empty content when allowEmptyContent is false","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw error for empty content when allowEmptyContent is false"},{"ancestorTitles":["analyze step"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"analyze step should use custom analysis when provided","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should use custom analysis when provided"}],"endTime":1746988050024,"message":"","name":"/Users/jacquesmarais/Documents/Personal/deep-research-api/packages/core/tests/steps/analyze.test.ts","startTime":1746988047386,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["plan step"],"duration":12,"failureDetails":[],"failureMessages":[],"fullName":"plan step should create a research plan with default options","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should create a research plan with default options"},{"ancestorTitles":["plan step"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"plan step should include plan in results when includeInResults is true","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should include plan in results when includeInResults is true"},{"ancestorTitles":["plan step"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"plan step should not include plan in results when includeInResults is false","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should not include plan in results when includeInResults is false"},{"ancestorTitles":["plan step"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"plan step should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["plan step"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"plan step should add structured plan data to state","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should add structured plan data to state"},{"ancestorTitles":["plan step"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"plan step should update metadata with step execution details","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should update metadata with step execution details"}],"endTime":1746988050695,"message":"","name":"/Users/jacquesmarais/Documents/Personal/deep-research-api/packages/core/tests/steps/plan.test.ts","startTime":1746988047349,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Pipeline Execution"],"duration":11,"failureDetails":[],"failureMessages":[],"fullName":"Pipeline Execution should execute a pipeline with a single step successfully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should execute a pipeline with a single step successfully"},{"ancestorTitles":["Pipeline Execution"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Pipeline Execution should execute multiple steps in sequence","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should execute multiple steps in sequence"},{"ancestorTitles":["Pipeline Execution"],"duration":9,"failureDetails":[],"failureMessages":[],"fullName":"Pipeline Execution should handle errors in steps when errorHandling is set to \"continue\"","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should handle errors in steps when errorHandling is set to \"continue\""},{"ancestorTitles":["Pipeline Execution"],"duration":1,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"Test error in step\"\u001b[39m\nReceived string:    \u001b[31m\"fail is not defined\"\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"Test error in step\"\u001b[39m\nReceived string:    \u001b[31m\"fail is not defined\"\u001b[39m\n    at Object.<anonymous> (/Users/jacquesmarais/Documents/Personal/deep-research-api/packages/core/tests/core/pipeline.test.ts:118:31)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Pipeline Execution should stop execution when a step fails and errorHandling is set to \"fail\"","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"failed","title":"should stop execution when a step fails and errorHandling is set to \"fail\""},{"ancestorTitles":["Pipeline Execution"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Pipeline Execution should pass the correct state between steps","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should pass the correct state between steps"},{"ancestorTitles":["Pipeline Execution"],"duration":1,"failureDetails":[{"matcherResult":{"actual":2,"expected":1,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m1\u001b[39m\nReceived: \u001b[31m2\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m1\u001b[39m\nReceived: \u001b[31m2\u001b[39m\n    at Object.<anonymous> (/Users/jacquesmarais/Documents/Personal/deep-research-api/packages/core/tests/core/pipeline.test.ts:170:48)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Pipeline Execution should track execution time and step metadata","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"should track execution time and step metadata"}],"endTime":1746988050768,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPipeline Execution › should stop execution when a step fails and errorHandling is set to \"fail\"\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\n    Expected substring: \u001b[32m\"Test error in step\"\u001b[39m\n    Received string:    \u001b[31m\"fail is not defined\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 116 |\u001b[39m       expect(metadataStep\u001b[33m.\u001b[39mexecute)\u001b[33m.\u001b[39mnot\u001b[33m.\u001b[39mtoHaveBeenCalled()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 117 |\u001b[39m       \u001b[36mif\u001b[39m (error \u001b[36minstanceof\u001b[39m \u001b[33mError\u001b[39m) {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 118 |\u001b[39m         expect(error\u001b[33m.\u001b[39mmessage)\u001b[33m.\u001b[39mtoContain(\u001b[32m'Test error in step'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 119 |\u001b[39m       } \u001b[36melse\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 120 |\u001b[39m         fail(\u001b[32m'Expected error to be an instance of Error'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 121 |\u001b[39m       }\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/core/pipeline.test.ts\u001b[39m\u001b[0m\u001b[2m:118:31)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPipeline Execution › should track execution time and step metadata\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m1\u001b[39m\n    Received: \u001b[31m2\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 168 |\u001b[39m     \u001b[22m\n\u001b[2m     \u001b[90m 169 |\u001b[39m     expect(metadataStep\u001b[33m.\u001b[39mexecute)\u001b[33m.\u001b[39mtoHaveBeenCalledTimes(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 170 |\u001b[39m     expect(result\u001b[33m.\u001b[39mmetadata\u001b[33m.\u001b[39mstepHistory\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBe(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                                \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 171 |\u001b[39m     expect(result\u001b[33m.\u001b[39mmetadata\u001b[33m.\u001b[39mstepHistory[\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39mstepName)\u001b[33m.\u001b[39mtoBe(\u001b[32m'MetadataStep'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 172 |\u001b[39m     expect(result\u001b[33m.\u001b[39mmetadata\u001b[33m.\u001b[39mstepHistory[\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 173 |\u001b[39m     expect(result\u001b[33m.\u001b[39mmetadata\u001b[33m.\u001b[39mstepHistory[\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39mstartTime)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/core/pipeline.test.ts\u001b[39m\u001b[0m\u001b[2m:170:48)\u001b[22m\u001b[2m\u001b[22m\n","name":"/Users/jacquesmarais/Documents/Personal/deep-research-api/packages/core/tests/core/pipeline.test.ts","startTime":1746988047341,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["flowControl steps","evaluate step"],"duration":27,"failureDetails":[],"failureMessages":[],"fullName":"flowControl steps evaluate step should evaluate a condition based on state data","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should evaluate a condition based on state data"},{"ancestorTitles":["flowControl steps","evaluate step"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"flowControl steps evaluate step should evaluate to false when criteria are not met","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should evaluate to false when criteria are not met"},{"ancestorTitles":["flowControl steps","evaluate step"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"flowControl steps evaluate step should include confidence score when provided","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should include confidence score when provided"},{"ancestorTitles":["flowControl steps","evaluate step"],"duration":12,"failureDetails":[],"failureMessages":[],"fullName":"flowControl steps evaluate step should handle errors in the criteria function","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors in the criteria function"},{"ancestorTitles":["flowControl steps","repeatUntil step"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"flowControl steps repeatUntil step should repeat steps until criteria are met","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should repeat steps until criteria are met"},{"ancestorTitles":["flowControl steps","repeatUntil step"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"flowControl steps repeatUntil step should respect maxIterations parameter","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should respect maxIterations parameter"},{"ancestorTitles":["flowControl steps","repeatUntil step"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"flowControl steps repeatUntil step should throw an error when maxIterations is reached if configured","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw an error when maxIterations is reached if configured"},{"ancestorTitles":["flowControl steps","repeatUntil step"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"flowControl steps repeatUntil step should handle errors in repeated steps","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors in repeated steps"}],"endTime":1746988050802,"message":"","name":"/Users/jacquesmarais/Documents/Personal/deep-research-api/packages/core/tests/steps/flowControl.test.ts","startTime":1746988047353,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["track step"],"duration":23,"failureDetails":[],"failureMessages":[],"fullName":"track step should execute a research track with specified steps","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"status":"passed","title":"should execute a research track with specified steps"},{"ancestorTitles":["track step"],"duration":12,"failureDetails":[],"failureMessages":[],"fullName":"track step should include the track in results when includeInResults is true","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should include the track in results when includeInResults is true"},{"ancestorTitles":["track step"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"track step should not include the track in results when includeInResults is false","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should not include the track in results when includeInResults is false"},{"ancestorTitles":["track step"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"track step should isolate track data when isolate is true","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should isolate track data when isolate is true"},{"ancestorTitles":["track step"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"track step should share data when isolate is false","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should share data when isolate is false"},{"ancestorTitles":["track step"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"track step should handle errors in track steps","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors in track steps"},{"ancestorTitles":["track step"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"track step should continue despite errors when continueOnError is true","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should continue despite errors when continueOnError is true"},{"ancestorTitles":["track step"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"track step should validate required parameters","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should validate required parameters"}],"endTime":1746988050811,"message":"","name":"/Users/jacquesmarais/Documents/Personal/deep-research-api/packages/core/tests/steps/track.test.ts","startTime":1746988047347,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["searchWeb step"],"duration":30,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalled\u001b[2m()\u001b[22m\n\nExpected number of calls: >= \u001b[32m1\u001b[39m\nReceived number of calls:    \u001b[31m0\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalled\u001b[2m()\u001b[22m\n\nExpected number of calls: >= \u001b[32m1\u001b[39m\nReceived number of calls:    \u001b[31m0\u001b[39m\n    at Object.<anonymous> (/Users/jacquesmarais/Documents/Personal/deep-research-api/packages/core/tests/steps/searchWeb.test.ts:19:39)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"searchWeb step should search the web with default options","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should search the web with default options"},{"ancestorTitles":["searchWeb step"],"duration":5,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: \u001b[32mObjectContaining {\"maxResults\": 1}\u001b[39m\n\nNumber of calls: \u001b[31m0\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: \u001b[32mObjectContaining {\"maxResults\": 1}\u001b[39m\n\nNumber of calls: \u001b[31m0\u001b[39m\n    at Object.<anonymous> (/Users/jacquesmarais/Documents/Personal/deep-research-api/packages/core/tests/steps/searchWeb.test.ts:35:39)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"searchWeb step should respect maxResults option","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should respect maxResults option"},{"ancestorTitles":["searchWeb step"],"duration":2,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: \u001b[32mObjectContaining {\"query\": \"test research query\"}\u001b[39m\n\nNumber of calls: \u001b[31m0\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: \u001b[32mObjectContaining {\"query\": \"test research query\"}\u001b[39m\n\nNumber of calls: \u001b[31m0\u001b[39m\n    at Object.<anonymous> (/Users/jacquesmarais/Documents/Personal/deep-research-api/packages/core/tests/steps/searchWeb.test.ts:50:39)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"searchWeb step should use research query if no specific query is provided","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should use research query if no specific query is provided"},{"ancestorTitles":["searchWeb step"],"duration":1,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: \u001b[32mObjectContaining {\"query\": \"specific search query\"}\u001b[39m\n\nNumber of calls: \u001b[31m0\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: \u001b[32mObjectContaining {\"query\": \"specific search query\"}\u001b[39m\n\nNumber of calls: \u001b[31m0\u001b[39m\n    at Object.<anonymous> (/Users/jacquesmarais/Documents/Personal/deep-research-api/packages/core/tests/steps/searchWeb.test.ts:68:39)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"searchWeb step should use specific search query when provided","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should use specific search query when provided"},{"ancestorTitles":["searchWeb step"],"duration":7,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledTimes\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected number of calls: \u001b[32m2\u001b[39m\nReceived number of calls: \u001b[31m0\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledTimes\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected number of calls: \u001b[32m2\u001b[39m\nReceived number of calls: \u001b[31m0\u001b[39m\n    at Object.<anonymous> (/Users/jacquesmarais/Documents/Personal/deep-research-api/packages/core/tests/steps/searchWeb.test.ts:97:39)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"searchWeb step should use queries from plan when useQueriesFromPlan is true","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should use queries from plan when useQueriesFromPlan is true"},{"ancestorTitles":["searchWeb step"],"duration":8,"failureDetails":[{"matcherResult":{"actual":0,"expected":2,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m2\u001b[39m\nReceived: \u001b[31m0\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m2\u001b[39m\nReceived: \u001b[31m0\u001b[39m\n    at Object.<anonymous> (/Users/jacquesmarais/Documents/Personal/deep-research-api/packages/core/tests/steps/searchWeb.test.ts:140:53)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"searchWeb step should merge search results when executing multiple queries","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should merge search results when executing multiple queries"},{"ancestorTitles":["searchWeb step"],"duration":3,"failureDetails":[{}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\n\u001b[1mMatcher error\u001b[22m: \u001b[31mreceived\u001b[39m value must not be null nor undefined\n\nReceived has value: \u001b[31mundefined\u001b[39m\n    at Object.<anonymous> (/Users/jacquesmarais/Documents/Personal/deep-research-api/packages/core/tests/steps/searchWeb.test.ts:155:52)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"searchWeb step should include search results in final output when includeInResults is true","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should include search results in final output when includeInResults is true"},{"ancestorTitles":["searchWeb step"],"duration":2,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"Search API failure\"\u001b[39m\nReceived string:    \u001b[31m\"fail is not defined\"\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"Search API failure\"\u001b[39m\nReceived string:    \u001b[31m\"fail is not defined\"\u001b[39m\n    at Object.<anonymous> (/Users/jacquesmarais/Documents/Personal/deep-research-api/packages/core/tests/steps/searchWeb.test.ts:174:31)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"searchWeb step should handle errors from search provider","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle errors from search provider"},{"ancestorTitles":["searchWeb step"],"duration":1,"failureDetails":[{"matcherResult":{"actual":0,"expected":1,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m1\u001b[39m\nReceived: \u001b[31m0\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m1\u001b[39m\nReceived: \u001b[31m0\u001b[39m\n    at Object.<anonymous> (/Users/jacquesmarais/Documents/Personal/deep-research-api/packages/core/tests/steps/searchWeb.test.ts:199:53)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"searchWeb step should deduplicate search results by URL","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should deduplicate search results by URL"}],"endTime":1746988050883,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1msearchWeb step › should search the web with default options\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalled\u001b[2m()\u001b[22m\n\n    Expected number of calls: >= \u001b[32m1\u001b[39m\n    Received number of calls:    \u001b[31m0\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 17 |\u001b[39m     \u001b[36mconst\u001b[39m updatedState \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m executeStep(searchStep\u001b[33m,\u001b[39m initialState)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 18 |\u001b[39m     \u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 19 |\u001b[39m     expect(mockSearchProvider\u001b[33m.\u001b[39msearch)\u001b[33m.\u001b[39mtoHaveBeenCalled()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 20 |\u001b[39m     expect(updatedState\u001b[33m.\u001b[39mdata\u001b[33m.\u001b[39msearchResults)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 21 |\u001b[39m     expect(updatedState\u001b[33m.\u001b[39mdata\u001b[33m.\u001b[39msearchResults\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 22 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/steps/searchWeb.test.ts\u001b[39m\u001b[0m\u001b[2m:19:39)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1msearchWeb step › should respect maxResults option\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected: \u001b[32mObjectContaining {\"maxResults\": 1}\u001b[39m\n\n    Number of calls: \u001b[31m0\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 33 |\u001b[39m     \u001b[22m\n\u001b[2m     \u001b[90m 34 |\u001b[39m     \u001b[90m// Verify search was called with maxResults parameter\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 35 |\u001b[39m     expect(mockSearchProvider\u001b[33m.\u001b[39msearch)\u001b[33m.\u001b[39mtoHaveBeenCalledWith(\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 36 |\u001b[39m       expect\u001b[33m.\u001b[39mobjectContaining({\u001b[22m\n\u001b[2m     \u001b[90m 37 |\u001b[39m         maxResults\u001b[22m\n\u001b[2m     \u001b[90m 38 |\u001b[39m       })\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/steps/searchWeb.test.ts\u001b[39m\u001b[0m\u001b[2m:35:39)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1msearchWeb step › should use research query if no specific query is provided\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected: \u001b[32mObjectContaining {\"query\": \"test research query\"}\u001b[39m\n\n    Number of calls: \u001b[31m0\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 48 |\u001b[39m     \u001b[22m\n\u001b[2m     \u001b[90m 49 |\u001b[39m     \u001b[90m// Verify search was called with the research query\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 50 |\u001b[39m     expect(mockSearchProvider\u001b[33m.\u001b[39msearch)\u001b[33m.\u001b[39mtoHaveBeenCalledWith(\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 51 |\u001b[39m       expect\u001b[33m.\u001b[39mobjectContaining({\u001b[22m\n\u001b[2m     \u001b[90m 52 |\u001b[39m         query\u001b[22m\n\u001b[2m     \u001b[90m 53 |\u001b[39m       })\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/steps/searchWeb.test.ts\u001b[39m\u001b[0m\u001b[2m:50:39)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1msearchWeb step › should use specific search query when provided\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected: \u001b[32mObjectContaining {\"query\": \"specific search query\"}\u001b[39m\n\n    Number of calls: \u001b[31m0\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 66 |\u001b[39m     \u001b[22m\n\u001b[2m     \u001b[90m 67 |\u001b[39m     \u001b[90m// Verify search was called with the specific query, not the research query\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 68 |\u001b[39m     expect(mockSearchProvider\u001b[33m.\u001b[39msearch)\u001b[33m.\u001b[39mtoHaveBeenCalledWith(\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 69 |\u001b[39m       expect\u001b[33m.\u001b[39mobjectContaining({\u001b[22m\n\u001b[2m     \u001b[90m 70 |\u001b[39m         query\u001b[33m:\u001b[39m specificQuery\u001b[22m\n\u001b[2m     \u001b[90m 71 |\u001b[39m       })\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/steps/searchWeb.test.ts\u001b[39m\u001b[0m\u001b[2m:68:39)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1msearchWeb step › should use queries from plan when useQueriesFromPlan is true\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledTimes\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected number of calls: \u001b[32m2\u001b[39m\n    Received number of calls: \u001b[31m0\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  95 |\u001b[39m     \u001b[22m\n\u001b[2m     \u001b[90m  96 |\u001b[39m     \u001b[90m// Verify search was called multiple times, once for each query from the plan\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m  97 |\u001b[39m     expect(mockSearchProvider\u001b[33m.\u001b[39msearch)\u001b[33m.\u001b[39mtoHaveBeenCalledTimes(\u001b[35m2\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m  98 |\u001b[39m     expect(mockSearchProvider\u001b[33m.\u001b[39msearch)\u001b[33m.\u001b[39mtoHaveBeenCalledWith(\u001b[22m\n\u001b[2m     \u001b[90m  99 |\u001b[39m       expect\u001b[33m.\u001b[39mobjectContaining({\u001b[22m\n\u001b[2m     \u001b[90m 100 |\u001b[39m         query\u001b[33m:\u001b[39m \u001b[32m'query from plan 1'\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/steps/searchWeb.test.ts\u001b[39m\u001b[0m\u001b[2m:97:39)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1msearchWeb step › should merge search results when executing multiple queries\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m2\u001b[39m\n    Received: \u001b[31m0\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 138 |\u001b[39m     \u001b[22m\n\u001b[2m     \u001b[90m 139 |\u001b[39m     \u001b[90m// Should have merged results from both queries\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 140 |\u001b[39m     expect(updatedState\u001b[33m.\u001b[39mdata\u001b[33m.\u001b[39msearchResults\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBe(\u001b[35m2\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 141 |\u001b[39m     expect(updatedState\u001b[33m.\u001b[39mdata\u001b[33m.\u001b[39msearchResults\u001b[33m?\u001b[39m\u001b[33m.\u001b[39m[\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39mtitle)\u001b[33m.\u001b[39mtoBe(\u001b[32m'Result 1'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 142 |\u001b[39m     expect(updatedState\u001b[33m.\u001b[39mdata\u001b[33m.\u001b[39msearchResults\u001b[33m?\u001b[39m\u001b[33m.\u001b[39m[\u001b[35m1\u001b[39m]\u001b[33m.\u001b[39mtitle)\u001b[33m.\u001b[39mtoBe(\u001b[32m'Result 2'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 143 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/steps/searchWeb.test.ts\u001b[39m\u001b[0m\u001b[2m:140:53)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1msearchWeb step › should include search results in final output when includeInResults is true\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\n    \u001b[1mMatcher error\u001b[22m: \u001b[31mreceived\u001b[39m value must not be null nor undefined\n\n    Received has value: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 153 |\u001b[39m     \u001b[22m\n\u001b[2m     \u001b[90m 154 |\u001b[39m     \u001b[90m// When includeInResults is true, searchResults should be included in final results\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 155 |\u001b[39m     expect(updatedState\u001b[33m.\u001b[39mmetadata\u001b[33m.\u001b[39mincludeInResults)\u001b[33m.\u001b[39mtoContain(\u001b[32m'searchResults'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 156 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 157 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 158 |\u001b[39m   it(\u001b[32m'should handle errors from search provider'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/steps/searchWeb.test.ts\u001b[39m\u001b[0m\u001b[2m:155:52)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1msearchWeb step › should handle errors from search provider\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\n    Expected substring: \u001b[32m\"Search API failure\"\u001b[39m\n    Received string:    \u001b[31m\"fail is not defined\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 172 |\u001b[39m       \u001b[90m// Properly type the error as unknown and check if it's an Error object\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 173 |\u001b[39m       \u001b[36mif\u001b[39m (error \u001b[36minstanceof\u001b[39m \u001b[33mError\u001b[39m) {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 174 |\u001b[39m         expect(error\u001b[33m.\u001b[39mmessage)\u001b[33m.\u001b[39mtoContain(\u001b[32m'Search API failure'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 175 |\u001b[39m       } \u001b[36melse\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 176 |\u001b[39m         fail(\u001b[32m'Error should be an instance of Error'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 177 |\u001b[39m       }\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/steps/searchWeb.test.ts\u001b[39m\u001b[0m\u001b[2m:174:31)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1msearchWeb step › should deduplicate search results by URL\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m1\u001b[39m\n    Received: \u001b[31m0\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 197 |\u001b[39m     \u001b[22m\n\u001b[2m     \u001b[90m 198 |\u001b[39m     \u001b[90m// Should have deduplicated the results\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 199 |\u001b[39m     expect(updatedState\u001b[33m.\u001b[39mdata\u001b[33m.\u001b[39msearchResults\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBe(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 200 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 201 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/steps/searchWeb.test.ts\u001b[39m\u001b[0m\u001b[2m:199:53)\u001b[22m\u001b[2m\u001b[22m\n","name":"/Users/jacquesmarais/Documents/Personal/deep-research-api/packages/core/tests/steps/searchWeb.test.ts","startTime":1746988047356,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["parallel step"],"duration":18,"failureDetails":[],"failureMessages":[],"fullName":"parallel step should execute multiple tracks in parallel","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"status":"passed","title":"should execute multiple tracks in parallel"},{"ancestorTitles":["parallel step"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"parallel step should use custom merge function when provided","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should use custom merge function when provided"},{"ancestorTitles":["parallel step"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"parallel step should use weighted merge strategy when configured","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should use weighted merge strategy when configured"},{"ancestorTitles":["parallel step"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"parallel step should handle errors in individual tracks","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should handle errors in individual tracks"},{"ancestorTitles":["parallel step"],"duration":12,"failureDetails":[],"failureMessages":[],"fullName":"parallel step should propagate errors when continueOnError is false","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should propagate errors when continueOnError is false"},{"ancestorTitles":["parallel step"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"parallel step should validate required parameters","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate required parameters"},{"ancestorTitles":["parallel step"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"parallel step should include merged results in final state when includeInResults is true","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should include merged results in final state when includeInResults is true"}],"endTime":1746988050955,"message":"","name":"/Users/jacquesmarais/Documents/Personal/deep-research-api/packages/core/tests/steps/parallel.test.ts","startTime":1746988047348,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["research()"],"duration":2,"failureDetails":[{"name":"ValidationError","code":"validation_error","details":{"zodErrors":[{"code":"invalid_type","expected":"string","received":"undefined","path":["message"],"message":"Required"}],"result":{"summary":"This is a mock summary for testing","keyFindings":["Finding 1","Finding 2"],"sources":["https://example.com/1","https://example.com/2"]}},"retry":false,"suggestions":["Check that your outputSchema matches the actual structure of your results","Adjust the mock test result to match your schema","Add appropriate transformations to ensure output matches the schema"]}],"failureMessages":["ValidationError: Research results do not match the expected schema\n    at research (/Users/jacquesmarais/Documents/Personal/deep-research-api/packages/core/src/core/research.ts:117:19)\n    at Object.<anonymous> (/Users/jacquesmarais/Documents/Personal/deep-research-api/packages/core/tests/research.test.ts:19:34)\n    at Promise.then.completed (/Users/jacquesmarais/Documents/Personal/deep-research-api/packages/core/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/jacquesmarais/Documents/Personal/deep-research-api/packages/core/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/jacquesmarais/Documents/Personal/deep-research-api/packages/core/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/jacquesmarais/Documents/Personal/deep-research-api/packages/core/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/jacquesmarais/Documents/Personal/deep-research-api/packages/core/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/jacquesmarais/Documents/Personal/deep-research-api/packages/core/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/jacquesmarais/Documents/Personal/deep-research-api/packages/core/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/jacquesmarais/Documents/Personal/deep-research-api/packages/core/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/jacquesmarais/Documents/Personal/deep-research-api/packages/core/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/jacquesmarais/Documents/Personal/deep-research-api/packages/core/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/jacquesmarais/Documents/Personal/deep-research-api/packages/core/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/jacquesmarais/Documents/Personal/deep-research-api/packages/core/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"research() should validate input and output schemas correctly","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should validate input and output schemas correctly"},{"ancestorTitles":["research()"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"research() should throw an error for invalid input schema","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw an error for invalid input schema"},{"ancestorTitles":["research()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"research() should throw an error for invalid output schema","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw an error for invalid output schema"}],"endTime":1746988051082,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mresearch() › should validate input and output schemas correctly\u001b[39m\u001b[22m\n\n    ValidationError: Research results do not match the expected schema\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 115 |\u001b[39m           \u001b[90m// If the schema validation fails, throw a proper validation error\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 116 |\u001b[39m           \u001b[36mif\u001b[39m (error \u001b[36minstanceof\u001b[39m z\u001b[33m.\u001b[39m\u001b[33mZodError\u001b[39m) {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 117 |\u001b[39m             \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mValidationError\u001b[39m({\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 118 |\u001b[39m               message\u001b[33m:\u001b[39m \u001b[32m'Research results do not match the expected schema'\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 119 |\u001b[39m               details\u001b[33m:\u001b[39m { \u001b[22m\n\u001b[2m     \u001b[90m 120 |\u001b[39m                 zodErrors\u001b[33m:\u001b[39m error\u001b[33m.\u001b[39merrors\u001b[33m,\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat research (\u001b[22m\u001b[2msrc/core/research.ts\u001b[2m:117:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/research.test.ts\u001b[39m\u001b[0m\u001b[2m:19:34)\u001b[22m\u001b[2m\u001b[22m\n","name":"/Users/jacquesmarais/Documents/Personal/deep-research-api/packages/core/tests/research.test.ts","startTime":1746988047359,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["research() - Main API"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"research() - Main API should validate input schema correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input schema correctly"},{"ancestorTitles":["research() - Main API"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"research() - Main API should throw an error for invalid input","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw an error for invalid input"},{"ancestorTitles":["research() - Main API"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"research() - Main API should validate output against the provided schema","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should validate output against the provided schema"},{"ancestorTitles":["research() - Main API"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"research() - Main API should reject output that does not match the schema","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject output that does not match the schema"},{"ancestorTitles":["research() - Main API"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"research() - Main API should use custom steps when provided","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should use custom steps when provided"},{"ancestorTitles":["research() - Main API"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"research() - Main API should handle defaultLLM configuration","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle defaultLLM configuration"},{"ancestorTitles":["research() - Main API"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"research() - Main API should respect configuration options","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respect configuration options"}],"endTime":1746988051082,"message":"","name":"/Users/jacquesmarais/Documents/Personal/deep-research-api/packages/core/tests/core/research.test.ts","startTime":1746988047356,"status":"passed","summary":""}],"wasInterrupted":false}
