{"numFailedTestSuites":0,"numFailedTests":0,"numPassedTestSuites":13,"numPassedTests":111,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":13,"numTotalTests":111,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1747043562952,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":["factCheck step"],"duration":17,"failureDetails":[],"failureMessages":[],"fullName":"factCheck step should perform fact checking with default options","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should perform fact checking with default options"},{"ancestorTitles":["factCheck step"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"factCheck step should use custom threshold when specified","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should use custom threshold when specified"},{"ancestorTitles":["factCheck step"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"factCheck step should include fact checks in results when includeInResults is true","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should include fact checks in results when includeInResults is true"},{"ancestorTitles":["factCheck step"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"factCheck step should respect custom prompt when provided","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respect custom prompt when provided"},{"ancestorTitles":["factCheck step"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"factCheck step should handle errors gracefully when continueOnError is true","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle errors gracefully when continueOnError is true"},{"ancestorTitles":["factCheck step"],"duration":115,"failureDetails":[],"failureMessages":[],"fullName":"factCheck step should throw error when no content and no statements provided","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw error when no content and no statements provided"},{"ancestorTitles":["factCheck step"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"factCheck step should handle empty content gracefully when allowEmptyContent is true","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle empty content gracefully when allowEmptyContent is true"},{"ancestorTitles":["factCheck step"],"duration":9,"failureDetails":[],"failureMessages":[],"fullName":"factCheck step should skip low-confidence results based on threshold","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should skip low-confidence results based on threshold"},{"ancestorTitles":["factCheck step"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"factCheck step should handle error cases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle error cases"}],"endTime":1747043566130,"message":"","name":"/Users/jacquesmarais/Documents/Personal/deep-research-api/packages/core/tests/steps/factCheck.test.ts","startTime":1747043563395,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["track step"],"duration":23,"failureDetails":[],"failureMessages":[],"fullName":"track step should execute a research track with specified steps","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"status":"passed","title":"should execute a research track with specified steps"},{"ancestorTitles":["track step"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"track step should include the track in results when includeInResults is true","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should include the track in results when includeInResults is true"},{"ancestorTitles":["track step"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"track step should not include the track in results when includeInResults is false","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should not include the track in results when includeInResults is false"},{"ancestorTitles":["track step"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"track step should isolate track data when isolate is true","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should isolate track data when isolate is true"},{"ancestorTitles":["track step"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"track step should share data when isolate is false","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should share data when isolate is false"},{"ancestorTitles":["track step"],"duration":20,"failureDetails":[],"failureMessages":[],"fullName":"track step should handle errors in track steps","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors in track steps"},{"ancestorTitles":["track step"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"track step should continue despite errors when continueOnError is true","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should continue despite errors when continueOnError is true"},{"ancestorTitles":["track step"],"duration":87,"failureDetails":[],"failureMessages":[],"fullName":"track step should validate required parameters","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should validate required parameters"}],"endTime":1747043566179,"message":"","name":"/Users/jacquesmarais/Documents/Personal/deep-research-api/packages/core/tests/steps/track.test.ts","startTime":1747043563391,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["parallel step"],"duration":19,"failureDetails":[],"failureMessages":[],"fullName":"parallel step should execute multiple tracks in parallel","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"status":"passed","title":"should execute multiple tracks in parallel"},{"ancestorTitles":["parallel step"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"parallel step should use custom merge function when provided","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should use custom merge function when provided"},{"ancestorTitles":["parallel step"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"parallel step should use weighted merge strategy when configured","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should use weighted merge strategy when configured"},{"ancestorTitles":["parallel step"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"parallel step should handle errors in individual tracks","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should handle errors in individual tracks"},{"ancestorTitles":["parallel step"],"duration":13,"failureDetails":[],"failureMessages":[],"fullName":"parallel step should propagate errors when continueOnError is false","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should propagate errors when continueOnError is false"},{"ancestorTitles":["parallel step"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"parallel step should validate required parameters","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate required parameters"},{"ancestorTitles":["parallel step"],"duration":147,"failureDetails":[],"failureMessages":[],"fullName":"parallel step should include merged results in final state when includeInResults is true","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should include merged results in final state when includeInResults is true"}],"endTime":1747043566259,"message":"","name":"/Users/jacquesmarais/Documents/Personal/deep-research-api/packages/core/tests/steps/parallel.test.ts","startTime":1747043563380,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["plan step"],"duration":19,"failureDetails":[],"failureMessages":[],"fullName":"plan step should create a research plan with default options","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should create a research plan with default options"},{"ancestorTitles":["plan step"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"plan step should include plan in results when includeInResults is true","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should include plan in results when includeInResults is true"},{"ancestorTitles":["plan step"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"plan step should not include plan in results when includeInResults is false","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should not include plan in results when includeInResults is false"},{"ancestorTitles":["plan step"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"plan step should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["plan step"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"plan step should add structured plan data to state","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should add structured plan data to state"},{"ancestorTitles":["plan step"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"plan step should update metadata with step execution details","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should update metadata with step execution details"}],"endTime":1747043566312,"message":"","name":"/Users/jacquesmarais/Documents/Personal/deep-research-api/packages/core/tests/steps/plan.test.ts","startTime":1747043563400,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["flowControl steps","evaluate step"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"flowControl steps evaluate step should evaluate a condition based on state data","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should evaluate a condition based on state data"},{"ancestorTitles":["flowControl steps","evaluate step"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"flowControl steps evaluate step should evaluate to false when criteria are not met","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should evaluate to false when criteria are not met"},{"ancestorTitles":["flowControl steps","evaluate step"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"flowControl steps evaluate step should include confidence score when provided","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should include confidence score when provided"},{"ancestorTitles":["flowControl steps","evaluate step"],"duration":83,"failureDetails":[],"failureMessages":[],"fullName":"flowControl steps evaluate step should handle errors in the criteria function","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors in the criteria function"},{"ancestorTitles":["flowControl steps","repeatUntil step"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"flowControl steps repeatUntil step should repeat steps until criteria are met","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should repeat steps until criteria are met"},{"ancestorTitles":["flowControl steps","repeatUntil step"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"flowControl steps repeatUntil step should respect maxIterations parameter","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should respect maxIterations parameter"},{"ancestorTitles":["flowControl steps","repeatUntil step"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"flowControl steps repeatUntil step should throw an error when maxIterations is reached if configured","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw an error when maxIterations is reached if configured"},{"ancestorTitles":["flowControl steps","repeatUntil step"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"flowControl steps repeatUntil step should handle errors in repeated steps","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors in repeated steps"}],"endTime":1747043566351,"message":"","name":"/Users/jacquesmarais/Documents/Personal/deep-research-api/packages/core/tests/steps/flowControl.test.ts","startTime":1747043566185,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Pipeline Execution"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"Pipeline Execution should execute a pipeline with a single step successfully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should execute a pipeline with a single step successfully"},{"ancestorTitles":["Pipeline Execution"],"duration":9,"failureDetails":[],"failureMessages":[],"fullName":"Pipeline Execution should execute multiple steps in sequence","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should execute multiple steps in sequence"},{"ancestorTitles":["Pipeline Execution"],"duration":37,"failureDetails":[],"failureMessages":[],"fullName":"Pipeline Execution should handle errors in steps when errorHandling is set to \"continue\"","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should handle errors in steps when errorHandling is set to \"continue\""},{"ancestorTitles":["Pipeline Execution"],"duration":16,"failureDetails":[],"failureMessages":[],"fullName":"Pipeline Execution should stop execution when a step fails and errorHandling is set to \"stop\"","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should stop execution when a step fails and errorHandling is set to \"stop\""},{"ancestorTitles":["Pipeline Execution"],"duration":11,"failureDetails":[],"failureMessages":[],"fullName":"Pipeline Execution should pass the correct state between steps","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should pass the correct state between steps"},{"ancestorTitles":["Pipeline Execution"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"Pipeline Execution should track execution time and step metadata","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"should track execution time and step metadata"}],"endTime":1747043566375,"message":"","name":"/Users/jacquesmarais/Documents/Personal/deep-research-api/packages/core/tests/core/pipeline.test.ts","startTime":1747043566260,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["analyze step"],"duration":116,"failureDetails":[],"failureMessages":[],"fullName":"analyze step should perform analysis with default options","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should perform analysis with default options"},{"ancestorTitles":["analyze step"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"analyze step should respect focus parameter","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should respect focus parameter"},{"ancestorTitles":["analyze step"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"analyze step should include recommendations when includeRecommendations is true","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should include recommendations when includeRecommendations is true"},{"ancestorTitles":["analyze step"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"analyze step should respect depth parameter","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should respect depth parameter"},{"ancestorTitles":["analyze step"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"analyze step should include analysis in results when includeInResults is true","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should include analysis in results when includeInResults is true"},{"ancestorTitles":["analyze step"],"duration":10,"failureDetails":[],"failureMessages":[],"fullName":"analyze step should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["analyze step"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"analyze step should handle empty content gracefully when allowEmptyContent is true","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle empty content gracefully when allowEmptyContent is true"},{"ancestorTitles":["analyze step"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"analyze step should throw error for empty content when allowEmptyContent is false","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw error for empty content when allowEmptyContent is false"},{"ancestorTitles":["analyze step"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"analyze step should use custom analysis when provided","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should use custom analysis when provided"}],"endTime":1747043566350,"message":"","name":"/Users/jacquesmarais/Documents/Personal/deep-research-api/packages/core/tests/steps/analyze.test.ts","startTime":1747043563376,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Error handling system","BaseResearchError"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Error handling system BaseResearchError should create a basic error with required properties","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"status":"passed","title":"should create a basic error with required properties"},{"ancestorTitles":["Error handling system","BaseResearchError"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Error handling system BaseResearchError should include optional properties when provided","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"should include optional properties when provided"},{"ancestorTitles":["Error handling system","BaseResearchError"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Error handling system BaseResearchError should format error message correctly","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should format error message correctly"},{"ancestorTitles":["Error handling system","Specialized error classes"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Error handling system Specialized error classes should create ConfigurationError with correct code","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should create ConfigurationError with correct code"},{"ancestorTitles":["Error handling system","Specialized error classes"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Error handling system Specialized error classes should create ValidationError with correct code","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should create ValidationError with correct code"},{"ancestorTitles":["Error handling system","Specialized error classes"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Error handling system Specialized error classes should create NetworkError with retry=true by default","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should create NetworkError with retry=true by default"},{"ancestorTitles":["Error handling system","Specialized error classes"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Error handling system Specialized error classes should create ApiError with statusCode in details","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should create ApiError with statusCode in details"},{"ancestorTitles":["Error handling system","Specialized error classes"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Error handling system Specialized error classes should create LLMError with retry=true by default","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should create LLMError with retry=true by default"},{"ancestorTitles":["Error handling system","Specialized error classes"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Error handling system Specialized error classes should create SearchError with retry=true by default","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should create SearchError with retry=true by default"},{"ancestorTitles":["Error handling system","Specialized error classes"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Error handling system Specialized error classes should create ExtractionError with correct code","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should create ExtractionError with correct code"},{"ancestorTitles":["Error handling system","Specialized error classes"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Error handling system Specialized error classes should create PipelineError with correct code","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should create PipelineError with correct code"},{"ancestorTitles":["Error handling system","Specialized error classes"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Error handling system Specialized error classes should create ProcessingError with correct code","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should create ProcessingError with correct code"},{"ancestorTitles":["Error handling system","Specialized error classes"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Error handling system Specialized error classes should create TimeoutError with correct code","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should create TimeoutError with correct code"},{"ancestorTitles":["Error handling system","Specialized error classes"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Error handling system Specialized error classes should create MaxIterationsError with correct code","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should create MaxIterationsError with correct code"},{"ancestorTitles":["Error handling system","Type guards"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Error handling system Type guards should correctly identify ResearchError","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should correctly identify ResearchError"},{"ancestorTitles":["Error handling system","Type guards"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Error handling system Type guards should correctly identify NetworkError","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should correctly identify NetworkError"},{"ancestorTitles":["Error handling system","Type guards"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Error handling system Type guards should correctly identify ApiError","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should correctly identify ApiError"},{"ancestorTitles":["Error handling system","Type guards"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Error handling system Type guards should correctly identify LLMError","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should correctly identify LLMError"},{"ancestorTitles":["Error handling system","Type guards"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Error handling system Type guards should correctly identify SearchError","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should correctly identify SearchError"},{"ancestorTitles":["Error handling system","Error code descriptions"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"Error handling system Error code descriptions should have descriptions for all error codes","invocations":1,"location":null,"numPassingAsserts":69,"retryReasons":[],"status":"passed","title":"should have descriptions for all error codes"}],"endTime":1747043566401,"message":"","name":"/Users/jacquesmarais/Documents/Personal/deep-research-api/packages/core/tests/types/errors.test.ts","startTime":1747043563394,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Retry utilities","executeWithRetry"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"Retry utilities executeWithRetry should execute function successfully without retries","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should execute function successfully without retries"},{"ancestorTitles":["Retry utilities","executeWithRetry"],"duration":14,"failureDetails":[],"failureMessages":[],"fullName":"Retry utilities executeWithRetry should retry when function throws a retryable error","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should retry when function throws a retryable error"},{"ancestorTitles":["Retry utilities","executeWithRetry"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"Retry utilities executeWithRetry should respect maxRetries setting","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should respect maxRetries setting"},{"ancestorTitles":["Retry utilities","executeWithRetry"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"Retry utilities executeWithRetry should not retry non-retryable errors","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should not retry non-retryable errors"},{"ancestorTitles":["Retry utilities","executeWithRetry"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Retry utilities executeWithRetry should use custom retryable function when provided","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should use custom retryable function when provided"},{"ancestorTitles":["Retry utilities","executeWithRetry"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Retry utilities executeWithRetry should call onRetry when provided","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should call onRetry when provided"},{"ancestorTitles":["Retry utilities","executeWithRetry"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Retry utilities executeWithRetry should use backoff factor for increasing delays","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should use backoff factor for increasing delays"},{"ancestorTitles":["Retry utilities","withRetry decorator"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Retry utilities withRetry decorator should add retry behavior to a function","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should add retry behavior to a function"},{"ancestorTitles":["Retry utilities","withRetry decorator"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Retry utilities withRetry decorator should preserve function arguments when retrying","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should preserve function arguments when retrying"}],"endTime":1747043566426,"message":"","name":"/Users/jacquesmarais/Documents/Personal/deep-research-api/packages/core/tests/utils/retry.test.ts","startTime":1747043563400,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["searchWeb step"],"duration":17,"failureDetails":[],"failureMessages":[],"fullName":"searchWeb step should search the web with default options","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should search the web with default options"},{"ancestorTitles":["searchWeb step"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"searchWeb step should respect maxResults option","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respect maxResults option"},{"ancestorTitles":["searchWeb step"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"searchWeb step should use research query if no specific query is provided","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should use research query if no specific query is provided"},{"ancestorTitles":["searchWeb step"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"searchWeb step should use specific search query when provided","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should use specific search query when provided"},{"ancestorTitles":["searchWeb step"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"searchWeb step should use queries from plan when useQueriesFromPlan is true","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should use queries from plan when useQueriesFromPlan is true"},{"ancestorTitles":["searchWeb step"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"searchWeb step should merge search results when executing multiple queries","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should merge search results when executing multiple queries"},{"ancestorTitles":["searchWeb step"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"searchWeb step should include search results in final output when includeInResults is true","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should include search results in final output when includeInResults is true"},{"ancestorTitles":["searchWeb step"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"searchWeb step should handle errors from search provider","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle errors from search provider"},{"ancestorTitles":["searchWeb step"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"searchWeb step should deduplicate search results by URL","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should deduplicate search results by URL"}],"endTime":1747043566426,"message":"","name":"/Users/jacquesmarais/Documents/Personal/deep-research-api/packages/core/tests/steps/searchWeb.test.ts","startTime":1747043563384,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["summarize step"],"duration":15,"failureDetails":[],"failureMessages":[],"fullName":"summarize step should generate a summary with default options","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should generate a summary with default options"},{"ancestorTitles":["summarize step"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"summarize step should generate structured summary when format is structured","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should generate structured summary when format is structured"},{"ancestorTitles":["summarize step"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"summarize step should respect maxLength parameter","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should respect maxLength parameter"},{"ancestorTitles":["summarize step"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"summarize step should include summary in results when includeInResults is true","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should include summary in results when includeInResults is true"},{"ancestorTitles":["summarize step"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"summarize step should not include summary in results when includeInResults is false","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should not include summary in results when includeInResults is false"},{"ancestorTitles":["summarize step"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"summarize step should use fact checks when factsOnly is true","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should use fact checks when factsOnly is true"},{"ancestorTitles":["summarize step"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"summarize step should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["summarize step"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"summarize step should handle empty content gracefully when allowEmptyContent is true","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle empty content gracefully when allowEmptyContent is true"},{"ancestorTitles":["summarize step"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"summarize step should throw error for empty content when allowEmptyContent is false","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw error for empty content when allowEmptyContent is false"},{"ancestorTitles":["summarize step"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"summarize step should use custom summary when provided","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should use custom summary when provided"}],"endTime":1747043566835,"message":"","name":"/Users/jacquesmarais/Documents/Personal/deep-research-api/packages/core/tests/steps/summarize.test.ts","startTime":1747043563379,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["research()"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"research() should validate input and output schemas correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input and output schemas correctly"},{"ancestorTitles":["research()"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"research() should throw an error for invalid input schema","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw an error for invalid input schema"},{"ancestorTitles":["research()"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"research() should throw an error for invalid output schema","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw an error for invalid output schema"}],"endTime":1747043567436,"message":"","name":"/Users/jacquesmarais/Documents/Personal/deep-research-api/packages/core/tests/research.test.ts","startTime":1747043563392,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["research() - Main API"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"research() - Main API should validate input schema correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input schema correctly"},{"ancestorTitles":["research() - Main API"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"research() - Main API should throw an error for invalid input","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw an error for invalid input"},{"ancestorTitles":["research() - Main API"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"research() - Main API should validate output against the provided schema","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should validate output against the provided schema"},{"ancestorTitles":["research() - Main API"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"research() - Main API should reject output that does not match the schema","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject output that does not match the schema"},{"ancestorTitles":["research() - Main API"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"research() - Main API should use custom steps when provided","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should use custom steps when provided"},{"ancestorTitles":["research() - Main API"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"research() - Main API should handle defaultLLM configuration","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle defaultLLM configuration"},{"ancestorTitles":["research() - Main API"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"research() - Main API should respect configuration options","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respect configuration options"}],"endTime":1747043567445,"message":"","name":"/Users/jacquesmarais/Documents/Personal/deep-research-api/packages/core/tests/core/research.test.ts","startTime":1747043563390,"status":"passed","summary":""}],"wasInterrupted":false}
